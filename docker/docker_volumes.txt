docker volumes

Вот инструкция в Dockerfile, которая позволяет создать том при запуске контейнера.
VOLUME /my_volume

Для того чтобы просмотреть список томов Docker, воспользуйтесь следующей командой:
docker volume ls

Исследовать конкретный том можно так:
docker volume inspect my_volume

Удалить том можно так:
docker volume rm my_volume

Для того чтобы удалить все тома, которые не используются контейнерами, можно прибегнуть к такой команде:
docker volume prune


docker container run --mount source=my_volume, target=/container/path/for/volume my_image

Надо отметить, что при использовании флага --mount увеличивается объём дополнительных данных, которые приходится указывать в команде, но, по нескольким причинам, лучше использовать именно этот флаг, а не --volume. Флаг --mount — это единственный механизм, который позволяет работать с сервисами или указывать параметры драйвера тома. Кроме того, работать с этим флагом проще.

В существующих примерах команд, направленных на работу с данными в Docker, вы можете встретить множество примеров употребления флага -v. Пытаясь адаптировать эти команды для себя, учитывайте то, что флаги --mount и --volume используют различные форматы параметров. То есть, нельзя просто заменить -v на --mount и получить рабочую команду.

Главное различие между --mount и --volume заключается в том, что при использовании флага --volume все параметры собирают вместе, в одном поле, а при использовании --mount параметры разделяются.

При работе с --mount параметры представлены как пары вида ключ-значение, а именно, это выглядит как key=value. Эти пары разделяют запятыми. Вот часто используемые параметры --mount:

type — тип монтирования. Значением для соответствующего ключа могут выступать bind, volume или tmpfs. Мы тут говорим о томах, то есть — нас интересует значение volume.
source — источник монтирования. Для именованных томов это — имя тома. Для неименованных томов этот ключ не указывают. Он может быть сокращён до src.
destination — путь, к которому файл или папка монтируется в контейнере. Этот ключ может быть сокращён до dst или target.
readonly — монтирует том, который предназначен только для чтения. Использовать этот ключ необязательно, значение ему не назначают.

Вот пример использования --mount с множеством параметров:
docker run --mount type=volume,source=volume_name,destination=/path/in/container,readonly my_image

Вот список часто используемых параметров для --mount, применимых в команде вида docker run --mount my_options my_image:
type=volume
source=volume_name
destination=/path/in/container
readonly




